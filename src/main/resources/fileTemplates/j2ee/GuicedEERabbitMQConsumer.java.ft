package ${PACKAGE_NAME};

import com.guicedee.rabbit.QueueConsumer;
import com.guicedee.rabbit.QueueDefinition;
import com.guicedee.rabbit.RabbitConnectionOptions;
import io.vertx.core.buffer.Buffer;
import io.vertx.rabbitmq.RabbitMQMessage;
import import com.google.inject.Singleton;;

/**
 * A RabbitMQ consumer that processes messages from a queue.
 */
@RabbitConnectionOptions(value = "${CONNECTION_NAME}",
                         password = "guest",
                         automaticRecoveryEnabled = false,
                         reconnectAttempts = 2,
                         reconnectInterval = 500)
@QueueDefinition(value = "${QUEUE_NAME}")
@Singleton //All QueueConsumers are Singleton, this is explicitly declaring
public class ${NAME} implements QueueConsumer {

    @Override
    public void consume(RabbitMQMessage message) {
        Buffer body = message.body();
        System.out.println("Consumed message: " + body.toString());
        
        // Implement your message processing logic here
    }
}